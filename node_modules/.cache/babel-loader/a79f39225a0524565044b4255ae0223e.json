{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/chart-components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as d3 from \"d3\";\nimport Candle from \"./Candle\";\nimport CrossHairs from \"./CrossHairs\";\n\nconst Chart = props => {\n  _s();\n\n  const {\n    data,\n    width: chart_width,\n    height: chart_height\n  } = props; // let { last_bar_idx = 0, bars_wide = 40 } = props;\n  // last_bar_idx should default to the last bar in the data, or else be sure passed-in value doesn't exceed the last bar\n  // last_bar_idx = last_bar_idx > 0 ? Math.min(last_bar_idx, data.length - 1) : data.length - 1;\n\n  const [mouseCoords, setMouseCoords] = useState({\n    x: 0,\n    y: 0\n  }); // let mouseCoords = {\n  //   x: 0,\n  //   y: 0\n  // };\n  // const setMouseCoords = (x, y) => {\n  //   mouseCoords = { x, y };\n  // };\n  // find the high and low bounds of all the bars being sidplayed\n\n  const dollar_high = d3.max(data.map(bar => bar.high)) * 1.05;\n  const dollar_low = d3.min(data.map(bar => bar.low)) * 0.95;\n  const chart_dims = {\n    pixel_width: chart_width,\n    pixel_height: chart_height,\n    dollar_high,\n    dollar_low,\n    dollar_delta: dollar_high - dollar_low\n  };\n\n  const dollarAt = pixel => {\n    const dollar = Math.abs(pixel - chart_dims.pixel_height) / chart_dims.pixel_height * chart_dims.dollar_delta + chart_dims.dollar_low;\n    return pixel > 0 ? dollar.toFixed(2) : \"-\";\n  };\n\n  const pixelFor = dollar => {\n    return Math.abs((dollar - chart_dims[\"dollar_low\"]) / chart_dims[\"dollar_delta\"] * chart_dims[\"pixel_height\"] - chart_dims[\"pixel_height\"]);\n  };\n\n  const onMouseLeave = () => {\n    setMouseCoords({\n      x: 0,\n      y: 0\n    });\n  };\n\n  const onMouseMoveInside = e => {\n    setMouseCoords({\n      x: e.nativeEvent.x - Math.round(e.currentTarget.getBoundingClientRect().left),\n      y: e.nativeEvent.y - Math.round(e.currentTarget.getBoundingClientRect().top)\n    });\n  };\n\n  const onMouseClickInside = e => {\n    console.log(`Click at ${e.nativeEvent.offsetX}, ${e.nativeEvent.offsetY}`);\n  }; // calculate the candle width\n\n\n  const candle_width = Math.floor(chart_width / data.length * 0.7);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: chart_width,\n    height: chart_height,\n    className: \"chart\",\n    onMouseMove: onMouseMoveInside,\n    onClick: onMouseClickInside,\n    onMouseLeave: onMouseLeave,\n    children: [data.map((bar, i) => {\n      const candle_x = chart_width / (data.length + 1) * (i + 1);\n      return /*#__PURE__*/_jsxDEV(Candle, {\n        data: bar,\n        x: candle_x,\n        candle_width: candle_width,\n        pixelFor: pixelFor\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"10\",\n      y: \"16\",\n      fill: \"white\",\n      fontSize: \"10\",\n      \"bg-color\": \"black\",\n      children: [/*#__PURE__*/_jsxDEV(\"tspan\", {\n        children: [\"Mouse: \", mouseCoords.x, \", \", mouseCoords.y]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tspan\", {\n        x: mouseCoords.x + 10,\n        y: mouseCoords.y - 10,\n        children: [\"Dollars: $\", dollarAt(mouseCoords.y)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CrossHairs, {\n      x: mouseCoords.x,\n      y: mouseCoords.y,\n      chart_dims: chart_dims\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"bqU/f0m+/8m5rd/Kykxo05WCGUU=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/chart-components/Chart.js"],"names":["React","useState","d3","Candle","CrossHairs","Chart","props","data","width","chart_width","height","chart_height","mouseCoords","setMouseCoords","x","y","dollar_high","max","map","bar","high","dollar_low","min","low","chart_dims","pixel_width","pixel_height","dollar_delta","dollarAt","pixel","dollar","Math","abs","toFixed","pixelFor","onMouseLeave","onMouseMoveInside","e","nativeEvent","round","currentTarget","getBoundingClientRect","left","top","onMouseClickInside","console","log","offsetX","offsetY","candle_width","floor","length","i","candle_x"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport * as d3 from \"d3\";\n\nimport Candle from \"./Candle\";\nimport CrossHairs from \"./CrossHairs\";\n\nconst Chart = props => {\n  const { data, width: chart_width, height: chart_height } = props;\n  // let { last_bar_idx = 0, bars_wide = 40 } = props;\n\n  // last_bar_idx should default to the last bar in the data, or else be sure passed-in value doesn't exceed the last bar\n  // last_bar_idx = last_bar_idx > 0 ? Math.min(last_bar_idx, data.length - 1) : data.length - 1;\n\n  const [mouseCoords, setMouseCoords] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // let mouseCoords = {\n  //   x: 0,\n  //   y: 0\n  // };\n\n  // const setMouseCoords = (x, y) => {\n  //   mouseCoords = { x, y };\n  // };\n\n  // find the high and low bounds of all the bars being sidplayed\n  const dollar_high = d3.max(data.map(bar => bar.high)) * 1.05;\n  const dollar_low = d3.min(data.map(bar => bar.low)) * 0.95;\n\n  const chart_dims = {\n    pixel_width: chart_width,\n    pixel_height: chart_height,\n    dollar_high,\n    dollar_low,\n    dollar_delta: dollar_high - dollar_low\n  };\n\n  const dollarAt = pixel => {\n    const dollar =\n      (Math.abs(pixel - chart_dims.pixel_height) / chart_dims.pixel_height) *\n        chart_dims.dollar_delta +\n      chart_dims.dollar_low;\n\n    return pixel > 0 ? dollar.toFixed(2) : \"-\";\n  };\n\n  const pixelFor = dollar => {\n    return Math.abs(\n      ((dollar - chart_dims[\"dollar_low\"]) / chart_dims[\"dollar_delta\"]) *\n        chart_dims[\"pixel_height\"] -\n        chart_dims[\"pixel_height\"]\n    );\n  };\n\n  const onMouseLeave = () => {\n    setMouseCoords({\n      x: 0,\n      y: 0\n    });\n  };\n\n  const onMouseMoveInside = e => {\n    setMouseCoords({\n      x:\n        e.nativeEvent.x -\n        Math.round(e.currentTarget.getBoundingClientRect().left),\n      y:\n        e.nativeEvent.y -\n        Math.round(e.currentTarget.getBoundingClientRect().top)\n    });\n  };\n\n  const onMouseClickInside = e => {\n    console.log(`Click at ${e.nativeEvent.offsetX}, ${e.nativeEvent.offsetY}`);\n  };\n\n  // calculate the candle width\n  const candle_width = Math.floor((chart_width / data.length) * 0.7);\n\n  return (\n    <svg\n      width={chart_width}\n      height={chart_height}\n      className=\"chart\"\n      onMouseMove={onMouseMoveInside}\n      onClick={onMouseClickInside}\n      onMouseLeave={onMouseLeave}\n    >\n      {data.map((bar, i) => {\n        const candle_x = (chart_width / (data.length + 1)) * (i + 1);\n        return (\n          <Candle\n            key={i}\n            data={bar}\n            x={candle_x}\n            candle_width={candle_width}\n            pixelFor={pixelFor}\n          />\n        );\n      })}\n      <text x=\"10\" y=\"16\" fill=\"white\" fontSize=\"10\" bg-color=\"black\">\n        <tspan>\n          Mouse: {mouseCoords.x}, {mouseCoords.y}\n        </tspan>\n        <tspan x={mouseCoords.x + 10} y={mouseCoords.y - 10}>\n          Dollars: ${dollarAt(mouseCoords.y)}\n        </tspan>\n      </text>\n      <CrossHairs x={mouseCoords.x} y={mouseCoords.y} chart_dims={chart_dims} />\n    </svg>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}