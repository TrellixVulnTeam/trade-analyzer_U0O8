{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/chart-components/Candle.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\n\nconst Candle = props => {\n  const {\n    data,\n    x,\n    candle_width,\n    pixelFor\n  } = props;\n  const up = data.close > data.open;\n  const bar_top = pixelFor(up ? data.close : data.open);\n  const bar_bottom = pixelFor(up ? data.open : data.close);\n  const bar_height = bar_bottom - bar_top;\n  const wick_top = pixelFor(data.high);\n  const wick_bottom = pixelFor(data.low);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x - candle_width / 2,\n      y: bar_top,\n      width: candle_width,\n      notreal: console.log(bar_height),\n      height: Math.abs(bar_height),\n      className: classNames({\n        candle: true,\n        up: up,\n        down: !up\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      className: classNames({\n        wick: true,\n        top: true,\n        up: up,\n        down: !up\n      }),\n      x1: x,\n      y1: bar_top,\n      x2: x,\n      y2: wick_top\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      className: classNames({\n        wick: true,\n        bottom: true,\n        up: up,\n        down: !up\n      }),\n      x1: x,\n      y1: bar_bottom,\n      x2: x,\n      y2: wick_bottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Candle;\nexport default Candle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Candle\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/chart-components/Candle.js"],"names":["React","classNames","Candle","props","data","x","candle_width","pixelFor","up","close","open","bar_top","bar_bottom","bar_height","wick_top","high","wick_bottom","low","console","log","Math","abs","candle","down","wick","top","bottom"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,CAAR;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAsCJ,KAA5C;AAEA,QAAMK,EAAE,GAAGJ,IAAI,CAACK,KAAL,GAAaL,IAAI,CAACM,IAA7B;AACA,QAAMC,OAAO,GAAGJ,QAAQ,CAACC,EAAE,GAAGJ,IAAI,CAACK,KAAR,GAAgBL,IAAI,CAACM,IAAxB,CAAxB;AACA,QAAME,UAAU,GAAGL,QAAQ,CAACC,EAAE,GAAGJ,IAAI,CAACM,IAAR,GAAeN,IAAI,CAACK,KAAvB,CAA3B;AACA,QAAMI,UAAU,GAAGD,UAAU,GAAGD,OAAhC;AACA,QAAMG,QAAQ,GAAGP,QAAQ,CAACH,IAAI,CAACW,IAAN,CAAzB;AACA,QAAMC,WAAW,GAAGT,QAAQ,CAACH,IAAI,CAACa,GAAN,CAA5B;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,CAAC,EAAEZ,CAAC,GAAGC,YAAY,GAAG,CADxB;AAEE,MAAA,CAAC,EAAEK,OAFL;AAGE,MAAA,KAAK,EAAEL,YAHT;AAIE,MAAA,OAAO,EACNY,OAAO,CAACC,GAAR,CAAYN,UAAZ,CALH;AAME,MAAA,MAAM,EAAEO,IAAI,CAACC,GAAL,CAASR,UAAT,CANV;AAOE,MAAA,SAAS,EAAEZ,UAAU,CAAC;AACpBqB,QAAAA,MAAM,EAAE,IADY;AAEpBd,QAAAA,EAAE,EAAEA,EAFgB;AAGpBe,QAAAA,IAAI,EAAE,CAACf;AAHa,OAAD;AAPvB;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AACE,MAAA,SAAS,EAAEP,UAAU,CAAC;AACpBuB,QAAAA,IAAI,EAAE,IADc;AAEpBC,QAAAA,GAAG,EAAE,IAFe;AAGpBjB,QAAAA,EAAE,EAAEA,EAHgB;AAIpBe,QAAAA,IAAI,EAAE,CAACf;AAJa,OAAD,CADvB;AAOE,MAAA,EAAE,EAAEH,CAPN;AAQE,MAAA,EAAE,EAAEM,OARN;AASE,MAAA,EAAE,EAAEN,CATN;AAUE,MAAA,EAAE,EAAES;AAVN;AAAA;AAAA;AAAA;AAAA,YAdF,eA0BE;AACE,MAAA,SAAS,EAAEb,UAAU,CAAC;AACpBuB,QAAAA,IAAI,EAAE,IADc;AAEpBE,QAAAA,MAAM,EAAE,IAFY;AAGpBlB,QAAAA,EAAE,EAAEA,EAHgB;AAIpBe,QAAAA,IAAI,EAAE,CAACf;AAJa,OAAD,CADvB;AAOE,MAAA,EAAE,EAAEH,CAPN;AAQE,MAAA,EAAE,EAAEO,UARN;AASE,MAAA,EAAE,EAAEP,CATN;AAUE,MAAA,EAAE,EAAEW;AAVN;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA,kBADF;AAyCD,CAnDD;;KAAMd,M;AAqDN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Candle = props => {\n  const { data, x, candle_width, pixelFor } = props;\n\n  const up = data.close > data.open;\n  const bar_top = pixelFor(up ? data.close : data.open);\n  const bar_bottom = pixelFor(up ? data.open : data.close);\n  const bar_height = bar_bottom - bar_top;\n  const wick_top = pixelFor(data.high);\n  const wick_bottom = pixelFor(data.low);\n\n  return (\n    <>\n      <rect\n        x={x - candle_width / 2}\n        y={bar_top}\n        width={candle_width}\n        notreal=\n        {console.log(bar_height)}\n        height={Math.abs(bar_height)}\n        className={classNames({\n          candle: true,\n          up: up,\n          down: !up\n        })}\n      />\n      <line\n        className={classNames({\n          wick: true,\n          top: true,\n          up: up,\n          down: !up\n        })}\n        x1={x}\n        y1={bar_top}\n        x2={x}\n        y2={wick_top}\n      />\n      <line\n        className={classNames({\n          wick: true,\n          bottom: true,\n          up: up,\n          down: !up\n        })}\n        x1={x}\n        y1={bar_bottom}\n        x2={x}\n        y2={wick_bottom}\n      />\n    </>\n  );\n};\n\nexport default Candle;\n"]},"metadata":{},"sourceType":"module"}