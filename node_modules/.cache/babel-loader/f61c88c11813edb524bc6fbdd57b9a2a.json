{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/chart-components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Candle from \"./Candle\";\nimport CrossHairs from \"./CrossHairs\";\n\nconst Chart = props => {\n  _s();\n\n  const {\n    data,\n    width: chart_width,\n    height: chart_height\n  } = props; // let { last_bar_idx = 0, bars_wide = 40 } = props;\n  // last_bar_idx should default to the last bar in the data, or else be sure passed-in value doesn't exceed the last bar\n  // last_bar_idx = last_bar_idx > 0 ? Math.min(last_bar_idx, data.length - 1) : data.length - 1;\n\n  const [mouseCoords, setMouseCoords] = useState({\n    x: -50,\n    y: -50\n  }); // let mouseCoords = {\n  //   x: 0,\n  //   y: 0\n  // };\n  // const setMouseCoords = (x, y) => {\n  //   mouseCoords = { x, y };\n  // };\n  // find the high and low bounds of all the bars being sidplayed\n\n  const dollar_high = Math.max.apply(Math, data.map(bar => +bar.high)) * 1.15;\n  const dollar_low = Math.min.apply(Math, data.map(bar => +bar.low)) * 0.95;\n  const chart_dims = {\n    pixel_width: chart_width,\n    pixel_height: chart_height,\n    dollar_high,\n    dollar_low,\n    dollar_delta: dollar_high - dollar_low\n  }; // toFixed rounds number to 2 decimal places\n\n  const dollarAt = pixel => {\n    const dollar = Math.abs(pixel - chart_dims.pixel_height) / chart_dims.pixel_height * chart_dims.dollar_delta + chart_dims.dollar_low;\n    return pixel > 0 ? dollar.toFixed(2) : \"-\";\n  }; // Gets candlestick data at x position\n\n\n  const candleDataAt = pixel => {\n    if (pixel <= 0 || pixel >= chart_dims.pixel_width) return \"-\";\n    const candle = data[Math.floor(pixel / chart_dims.pixel_width * data.length)];\n    return candle;\n  };\n\n  const convertDate = dateString => {\n    if (!dateString) return \"error\";\n    console.log(dateString, dateString.length);\n    const myYear = dateString.substring(2, 4);\n    const myMonth = parseInt(dateString.substring(5, 7), 10);\n    const myDay = parseInt(dateString.substring(8, 10), 10);\n\n    if (dateString.length === 10) {\n      return myMonth + \"/\" + myDay + \"/\" + myYear;\n    }\n\n    const myHour = parseInt(dateString.substring(11, 13), 10);\n    const myMinute = parseInt(dateString.substring(13), 10);\n    return myMonth + \"/\" + myDay + \"/\" + myYear + \" \" + myHour + \":\" + myMinute + \" EST\";\n  };\n\n  const candleChange = pixel => {\n    if (pixel <= 0 || pixel >= chart_dims.pixel_width) return \"-\";\n    const candle = data[Math.floor(pixel / chart_dims.pixel_width * data.length)];\n    const change = (candle['close'] / candle['open'] - 1) * 100;\n    const posNeg = change > 0 ? '+' : '-';\n    return posNeg + Math.abs(change).toFixed(2) + '%';\n  };\n\n  const pixelFor = dollar => {\n    return -1 * ((dollar - chart_dims[\"dollar_low\"]) / chart_dims[\"dollar_delta\"] * chart_dims[\"pixel_height\"] - chart_dims[\"pixel_height\"]);\n  };\n\n  const onMouseLeave = () => {\n    setMouseCoords({\n      x: -50,\n      y: -50\n    });\n  };\n\n  const onMouseMoveInside = e => {\n    //for date(x axis), calc using dates[x cord/width] , create dates[]\n    setMouseCoords({\n      x: e.nativeEvent.x - Math.round(e.currentTarget.getBoundingClientRect().left),\n      y: e.nativeEvent.y - Math.round(e.currentTarget.getBoundingClientRect().top)\n    });\n  };\n\n  const onMouseClickInside = e => {//console.log(`Click at ${e.nativeEvent.offsetX}, ${e.nativeEvent.offsetY}`);\n  }; // calculate the candle width\n\n\n  const candle_width = Math.floor(chart_width / data.length * 0.7);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: chart_width * 1.025\n    /* Extra width to fit price */\n    ,\n    height: chart_height,\n    className: \"chart\",\n    onMouseMove: onMouseMoveInside,\n    onClick: onMouseClickInside,\n    onMouseLeave: onMouseLeave,\n    children: [data.map((bar, i) => {\n      const candle_x = chart_width / (data.length + 1) * (i + 1);\n      return /*#__PURE__*/_jsxDEV(Candle, {\n        data: bar,\n        x: candle_x,\n        candle_width: candle_width,\n        pixelFor: pixelFor\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(CrossHairs, {\n      x: mouseCoords.x,\n      y: mouseCoords.y,\n      chart_dims: chart_dims\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: chart_width * 1.025 - (1 + dollarAt(mouseCoords.y).length) * 10,\n      y: mouseCoords.y - 12,\n      width: (1 + dollarAt(mouseCoords.y).length) * 10,\n      height: \"25\",\n      fill: \"white\",\n      rx: \"9\",\n      ry: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: 5 + chart_width * 1.025 - (1 + dollarAt(mouseCoords.y).length) * 10,\n      y: mouseCoords.y + 5,\n      fill: \"black\",\n      fontSize: \"15\",\n      children: [\"$\", dollarAt(mouseCoords.y)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"16\",\n      y: \"30\",\n      fontSize: \"20\",\n      children: [/*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#dedfe4\",\n        children: \"Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#898996\",\n        children: [\"$\", candleDataAt(mouseCoords.x)['open'], \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#dedfe4\",\n        children: \"High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#898996\",\n        children: [\"$\", candleDataAt(mouseCoords.x)['high']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"16\",\n      y: \"54\",\n      fontSize: \"20\",\n      children: [/*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#dedfe4\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#898996\",\n        children: [\"$\", candleDataAt(mouseCoords.x)['close'], \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#dedfe4\",\n        children: \"Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#898996\",\n        children: [\"$\", candleDataAt(mouseCoords.x)['low']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"16\",\n      y: \"76\",\n      fontSize: \"20\",\n      children: [/*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#dedfe4\",\n        children: \"Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#898996\",\n        children: [mouseCoords.x > 0 ? (candleDataAt(mouseCoords.x)['volume'] / 1000).toFixed(2) + 'K' : '', \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#dedfe4\",\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"tspan\", {\n        fill: \"#898996\",\n        children: candleChange(mouseCoords.x)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"16\",\n      y: \"110\",\n      fill: \"#898996\",\n      fontSize: \"30\",\n      children: convertDate(candleDataAt(mouseCoords.x)['xAxis'])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"Zirphik+dq5A1HSKq0DCW4tQD+A=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/chart-components/Chart.js"],"names":["React","useState","Candle","CrossHairs","Chart","props","data","width","chart_width","height","chart_height","mouseCoords","setMouseCoords","x","y","dollar_high","Math","max","apply","map","bar","high","dollar_low","min","low","chart_dims","pixel_width","pixel_height","dollar_delta","dollarAt","pixel","dollar","abs","toFixed","candleDataAt","candle","floor","length","convertDate","dateString","console","log","myYear","substring","myMonth","parseInt","myDay","myHour","myMinute","candleChange","change","posNeg","pixelFor","onMouseLeave","onMouseMoveInside","e","nativeEvent","round","currentTarget","getBoundingClientRect","left","top","onMouseClickInside","candle_width","i","candle_x"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport Candle from \"./Candle\";\nimport CrossHairs from \"./CrossHairs\";\n\nconst Chart = props => {\n  const { data, width: chart_width, height: chart_height } = props;\n  // let { last_bar_idx = 0, bars_wide = 40 } = props;\n\n  // last_bar_idx should default to the last bar in the data, or else be sure passed-in value doesn't exceed the last bar\n  // last_bar_idx = last_bar_idx > 0 ? Math.min(last_bar_idx, data.length - 1) : data.length - 1;\n\n  const [mouseCoords, setMouseCoords] = useState({\n    x: -50,\n    y: -50\n  });\n\n  // let mouseCoords = {\n  //   x: 0,\n  //   y: 0\n  // };\n\n  // const setMouseCoords = (x, y) => {\n  //   mouseCoords = { x, y };\n  // };\n\n  // find the high and low bounds of all the bars being sidplayed\n  const dollar_high = Math.max.apply(Math, data.map(bar => +bar.high)) * 1.15;\n  const dollar_low = Math.min.apply(Math, data.map(bar => +bar.low)) * 0.95 ;\n\n  const chart_dims = {\n    pixel_width: chart_width,\n    pixel_height: chart_height,\n    dollar_high,\n    dollar_low,\n    dollar_delta: dollar_high - dollar_low\n  };\n\n  // toFixed rounds number to 2 decimal places\n  const dollarAt = pixel => {\n    const dollar =\n      (Math.abs(pixel - chart_dims.pixel_height) / chart_dims.pixel_height) *\n        chart_dims.dollar_delta +\n      chart_dims.dollar_low;\n\n    return pixel > 0 ? dollar.toFixed(2) : \"-\";\n  };\n\n  // Gets candlestick data at x position\n  const candleDataAt = pixel => {\n    if(pixel<=0 || pixel >= chart_dims.pixel_width) return \"-\";\n    const candle = data[Math.floor((pixel/ chart_dims.pixel_width) * data.length)];\n\n    return candle;\n  };\n\n  const convertDate = dateString => {\n    if(!dateString) return \"error\";\n    console.log(dateString, dateString.length);\n    const myYear = dateString.substring(2,4);\n    const myMonth = parseInt(dateString.substring(5,7), 10);\n    const myDay = parseInt(dateString.substring(8,10), 10);\n    if(dateString.length===10){\n      return myMonth + \"/\" + myDay + \"/\" + myYear;\n    }\n    const myHour = parseInt(dateString.substring(11,13), 10);\n    const myMinute = parseInt(dateString.substring(13), 10);\n\n    return myMonth + \"/\" + myDay + \"/\" + myYear + \" \" + myHour + \":\" + myMinute + \" EST\";\n  }\n\n  const candleChange = pixel => {\n    if(pixel<=0 || pixel >= chart_dims.pixel_width) return \"-\";\n    const candle = data[Math.floor((pixel/ chart_dims.pixel_width) * data.length)];\n    const change = ((candle['close']/candle['open'])-1) * 100;\n    const posNeg = change > 0 ? '+' : '-';\n    return posNeg + Math.abs(change).toFixed(2) + '%';\n  };\n\n  const pixelFor = dollar => {\n    return -1*(\n      ((dollar - chart_dims[\"dollar_low\"]) / chart_dims[\"dollar_delta\"]) *\n        chart_dims[\"pixel_height\"] -\n        chart_dims[\"pixel_height\"]\n    );\n  };\n\n  const onMouseLeave = () => {\n    setMouseCoords({\n      x: -50,\n      y: -50\n    });\n  };\n\n  const onMouseMoveInside = e => {\n    //for date(x axis), calc using dates[x cord/width] , create dates[]\n    setMouseCoords({\n      x:\n        e.nativeEvent.x -\n        Math.round(e.currentTarget.getBoundingClientRect().left),\n      y:\n        e.nativeEvent.y -\n        Math.round(e.currentTarget.getBoundingClientRect().top)\n    });\n  };\n\n  const onMouseClickInside = e => {\n    //console.log(`Click at ${e.nativeEvent.offsetX}, ${e.nativeEvent.offsetY}`);\n  };\n\n  // calculate the candle width\n  const candle_width = Math.floor((chart_width / data.length) * 0.7);\n  return (\n    <svg\n      width={chart_width*1.025 /* Extra width to fit price */}\n      height={chart_height}\n      className=\"chart\"\n      onMouseMove={onMouseMoveInside}\n      onClick={onMouseClickInside}\n      onMouseLeave={onMouseLeave}\n    >\n      {data.map((bar, i) => {\n        const candle_x = (chart_width / (data.length + 1)) * (i + 1);\n        return (\n          <Candle\n            key={i}\n            data={bar}\n            x={candle_x}\n            candle_width={candle_width}\n            pixelFor={pixelFor}\n          />\n        );\n      })}\n\n      <CrossHairs x={mouseCoords.x} y={mouseCoords.y} chart_dims={chart_dims} />\n      \n      {/* Price */}\n      <rect x={(chart_width*1.025)-(1+dollarAt(mouseCoords.y).length)*10} y={mouseCoords.y-12} width={(1+dollarAt(mouseCoords.y).length)*10} height='25' fill=\"white\" rx='9' ry='9'>{/* background color for price */}</rect>\n      <text x={5 + (chart_width*1.025)-(1+dollarAt(mouseCoords.y).length)*10} y={mouseCoords.y+5} fill='black' fontSize=\"15\">\n        ${dollarAt(mouseCoords.y)}\n      </text>\n      {/* Open/High */}\n      <text x='16' y='30' fontSize=\"20\">\n        <tspan fill='#dedfe4'>Open</tspan> <tspan fill='#898996'>${candleDataAt(mouseCoords.x)['open']}  </tspan>\n        <tspan fill='#dedfe4'>High</tspan> <tspan fill='#898996'>${candleDataAt(mouseCoords.x)['high']}</tspan>\n      </text>\n      {/* Low/Close */}\n      <text x='16' y='54' fontSize=\"20\">\n        <tspan fill='#dedfe4'>Close</tspan> <tspan fill='#898996'>${candleDataAt(mouseCoords.x)['close']}  </tspan>\n        <tspan fill='#dedfe4'>Low</tspan> <tspan fill='#898996'>${candleDataAt(mouseCoords.x)['low']}</tspan>\n      </text>\n      {/* Volume/%change */}\n      <text x='16' y='76' fontSize=\"20\">\n        <tspan fill='#dedfe4'>Volume</tspan> <tspan fill='#898996'>{mouseCoords.x > 0 ?(candleDataAt(mouseCoords.x)['volume']/1000).toFixed(2) + 'K': ''}  </tspan>\n        <tspan fill='#dedfe4'>Change</tspan> <tspan fill='#898996'>{candleChange(mouseCoords.x)}</tspan>\n      </text>\n      {/* Date Time */}\n      <text x='16' y='110' fill='#898996' fontSize='30'>\n        {convertDate(candleDataAt(mouseCoords.x)['xAxis'])} \n      </text>\n    </svg>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}