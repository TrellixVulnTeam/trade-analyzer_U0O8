{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Balance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useEffect, useState } from 'react';\nimport { select } from 'd3';\nimport { GlobalContext } from '../context/GlobalState';\nimport Chart from 'Chart';\nexport const Balance = () => {\n  _s();\n\n  const {\n    transactions\n  } = useContext(GlobalContext);\n  const amounts = transactions.map(transaction => transaction.amount);\n  const total = amounts.reduce((acc, item) => acc += item, 0).toFixed(2); //temp graph d3 example\n\n  const [data] = useState([25, 33, 44, 53, 23]);\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = select(svgRef.current); //now can use all d3 commands and stuff\n\n    svg.selectAll(\"circle\").data(data).join(enter => enter.append(\"circle\") //effects circles we add\n    .attr(\"r\", value => value).attr(\"cx\", value => value * 2).attr(\"cy\", value => value * 2).attr(\"stroke\", \"red\"), update => update.attr(\"class\", \"updated\"), //effects circles that we update(exist in html alr)\n    exit => exit.remove() //delete else, or remove\n    ); //add .attr here to effect ALL circles\n  }, [data]); //------end d3 ex code------- also imports\n\n  const {\n    width: size\n  } = Dimensions.get(\"window\");\n  const candles = data.slice(0, 20);\n  const caliber = size / candles.length; // const styles = StyleSheet.create({\n  //   container: {\n  //     flex: 1,\n  //     backgroundColor: \"black\"\n  //   }\n  // });\n  //candlestick tutorial end-----\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, { ...{\n        candles,\n        size,\n        caliber\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"$\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Balance, \"bv+wquWEzp1d6gUVOQGgD73WDXE=\");\n\n_c = Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Balance.js"],"names":["React","useContext","useRef","useEffect","useState","select","GlobalContext","Chart","Balance","transactions","amounts","map","transaction","amount","total","reduce","acc","item","toFixed","data","svgRef","svg","current","selectAll","join","enter","append","attr","value","update","exit","remove","width","size","Dimensions","get","candles","slice","caliber","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,MAAT,QAAuB,IAAvB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAmBR,UAAU,CAACK,aAAD,CAAnC;AAEA,QAAMI,OAAO,GAAGD,YAAY,CAACE,GAAb,CAAiBC,WAAW,IAAIA,WAAW,CAACC,MAA5C,CAAhB;AAEA,QAAMC,KAAK,GAAGJ,OAAO,CAACK,MAAR,CAAe,CAACC,GAAD,EAAMC,IAAN,KAAgBD,GAAG,IAAIC,IAAtC,EAA6C,CAA7C,EAAgDC,OAAhD,CAAwD,CAAxD,CAAd,CAL2B,CAO3B;;AACA,QAAM,CAACC,IAAD,IAASf,QAAQ,CAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,CAAD,CAAvB;AACA,QAAMgB,MAAM,GAAGlB,MAAM,EAArB;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMkB,GAAG,GAAGhB,MAAM,CAACe,MAAM,CAACE,OAAR,CAAlB,CADe,CACoB;;AACnCD,IAAAA,GAAG,CAACE,SAAJ,CAAc,QAAd,EAAwBJ,IAAxB,CAA6BA,IAA7B,EACGK,IADH,CAEIC,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAa,QAAb,EAA2B;AAA3B,KACNC,IADM,CACD,GADC,EACIC,KAAK,IAAIA,KADb,EAEND,IAFM,CAED,IAFC,EAEKC,KAAK,IAAIA,KAAK,GAAC,CAFpB,EAGND,IAHM,CAGD,IAHC,EAGKC,KAAK,IAAIA,KAAK,GAAC,CAHpB,EAIND,IAJM,CAID,QAJC,EAIS,KAJT,CAFb,EAOIE,MAAM,IAAIA,MAAM,CAACF,IAAP,CAAY,OAAZ,EAAqB,SAArB,CAPd,EAOkD;AAC9CG,IAAAA,IAAI,IAAIA,IAAI,CAACC,MAAL,EARZ,CAQkD;AARlD,MAFe,CAWmC;AAEnD,GAbQ,EAaN,CAACZ,IAAD,CAbM,CAAT,CAX2B,CAyB3B;;AACE,QAAM;AAAEa,IAAAA,KAAK,EAAEC;AAAT,MAAkBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAxB;AACA,QAAMC,OAAO,GAAGjB,IAAI,CAACkB,KAAL,CAAW,CAAX,EAAa,EAAb,CAAhB;AACA,QAAMC,OAAO,GAAGL,IAAI,GAAGG,OAAO,CAACG,MAA/B,CA5ByB,CA6BzB;AACA;AACA;AACA;AACA;AACA;AAKF;;AAGA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD,OAAW;AAACH,QAAAA,OAAD;AAAUH,QAAAA,IAAV;AAAgBK,QAAAA;AAAhB;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,GAAG,EAAIlB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,sBAAMN,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CAlDM;;GAAMN,O;;KAAAA,O","sourcesContent":["import React, { useContext, useRef, useEffect, useState } from 'react';\nimport { select } from 'd3';\nimport { GlobalContext } from '../context/GlobalState';\nimport Chart from 'Chart'\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  //temp graph d3 example\n  const [data] = useState([25,33,44,53,23]);\n  const svgRef = useRef();\n\n  useEffect( () => {\n    const svg = select(svgRef.current);//now can use all d3 commands and stuff\n    svg.selectAll(\"circle\").data(data)\n      .join(\n        enter => enter.append(\"circle\")     //effects circles we add\n          .attr(\"r\", value => value)\n          .attr(\"cx\", value => value*2)\n          .attr(\"cy\", value => value*2)\n          .attr(\"stroke\", \"red\"),\n        update => update.attr(\"class\", \"updated\"),    //effects circles that we update(exist in html alr)\n        exit => exit.remove()                         //delete else, or remove\n      )                                               //add .attr here to effect ALL circles\n\n  }, [data]);\n  //------end d3 ex code------- also imports\n    const { width: size } = Dimensions.get(\"window\");\n    const candles = data.slice(0,20);\n    const caliber = size / candles.length;\n    // const styles = StyleSheet.create({\n    //   container: {\n    //     flex: 1,\n    //     backgroundColor: \"black\"\n    //   }\n    // });\n\n\n\n\n  //candlestick tutorial end-----\n\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <Chart {...{candles, size, caliber}} />\n      <svg ref = {svgRef}> </svg>\n      <h1>${total}</h1>\n    </>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}