{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/SearchResults.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef } from 'react';\nimport styled from \"styled-components\";\nimport { SearchItem } from './SearchItem';\nimport { GlobalContext } from '../context/GlobalState';\nconst CSS = styled.div`\n  position: absolute;\n  z-index:1;\n  width: 24%;\n`;\n/**\n * Hook that alerts clicks outside of the passed ref\n */\n\n_c = CSS;\n\nfunction useOutsideAlerter(ref) {\n  _s();\n\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        alert(\"You clicked outside of me!\");\n      }\n    } // Bind the event listener\n\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\n_s(useOutsideAlerter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport const SearchResults = () => {\n  _s2();\n\n  const {\n    symbol_list\n  } = useContext(GlobalContext);\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-4\",\n    ref: wrapperRef,\n    children: /*#__PURE__*/_jsxDEV(CSS, {\n      children: symbol_list.map(mySymbol => /*#__PURE__*/_jsxDEV(SearchItem, {\n        mySymbol: mySymbol\n      }, mySymbol.symbol, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SearchResults, \"9wI3vkAr3uPQziPQZiynYMDb2CM=\", false, function () {\n  return [useOutsideAlerter];\n});\n\n_c2 = SearchResults;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CSS\");\n$RefreshReg$(_c2, \"SearchResults\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/SearchResults.js"],"names":["React","useContext","useEffect","useRef","styled","SearchItem","GlobalContext","CSS","div","useOutsideAlerter","ref","handleClickOutside","event","current","contains","target","alert","document","addEventListener","removeEventListener","SearchResults","symbol_list","wrapperRef","map","mySymbol","symbol"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,MAAMC,GAAG,GAAGH,MAAM,CAACI,GAAI;AACvB;AACA;AACA;AACA,CAJA;AAMA;AACA;AACA;;KARMD,G;;AASN,SAASE,iBAAT,CAA2BC,GAA3B,EAAgC;AAAA;;AAC9BR,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACI,aAASS,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,UAAIF,GAAG,CAACG,OAAJ,IAAe,CAACH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDC,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,KARa,CASd;;;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,kBAAvC;AACA,WAAO,MAAM;AACX;AACAM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,kBAA1C;AACD,KAHD;AAID,GAfQ,EAeN,CAACD,GAAD,CAfM,CAAT;AAgBD;;GAjBQD,iB;;AAmBT,OAAO,MAAMW,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAkBpB,UAAU,CAACK,aAAD,CAAlC;AAGA,QAAMgB,UAAU,GAAGnB,MAAM,CAAC,IAAD,CAAzB;AACAM,EAAAA,iBAAiB,CAACa,UAAD,CAAjB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAEA,UAA5B;AAAA,2BACA,QAAC,GAAD;AAAA,gBACGD,WAAW,CAACE,GAAZ,CAAgBC,QAAQ,iBAAK,QAAC,UAAD;AAAkC,QAAA,QAAQ,EAAEA;AAA5C,SAAiBA,QAAQ,CAACC,MAA1B;AAAA;AAAA;AAAA;AAAA,cAA7B;AADH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAdM;;IAAML,a;UAKXX,iB;;;MALWW,a","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\nimport styled from \"styled-components\";\nimport { SearchItem } from './SearchItem';\n\nimport { GlobalContext } from '../context/GlobalState';\n\nconst CSS = styled.div`\n  position: absolute;\n  z-index:1;\n  width: 24%;\n`;\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref) {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        alert(\"You clicked outside of me!\");\n      }\n    }\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\nexport const SearchResults = () => {\n  const { symbol_list } = useContext(GlobalContext);\n\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n\n  return (\n    <div className=\"col-4\" ref={wrapperRef}>\n    <CSS>\n      {symbol_list.map(mySymbol => (<SearchItem key={mySymbol.symbol} mySymbol={mySymbol} />))}\n    </CSS>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}