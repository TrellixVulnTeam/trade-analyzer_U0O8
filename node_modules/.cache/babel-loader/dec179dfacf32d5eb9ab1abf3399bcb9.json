{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Backtest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nexport const Backtest = ({\n  backtest\n}) => {\n  _s();\n\n  const {\n    deleteBacktest\n  } = useContext(GlobalContext);\n  /*\n    ema: function, symbol, interval,time period, series type,\n    Sma: function, symbol, interval,time period, series type,\n    rsi: function, symbol, interval,time period, series type\n     //do below later\n    bba: function, symbol, interval,time period, series type, (optionals: dev up, dev down, move avg type)\n    MACD:function, symbol, interval, series type, (optional: fastperiod, slow period, signalperiod)\n    OBv: function, symbol, interval\n    STOCH: function, symbol, interval, (optionals: fast K period, slow K period, slow D period, slow K ma type, slow D ma type)\n     pair settings:\n    max bags : int\n    inital balance: int\n    inital bag cost: int or percent\n    strategy: selected already... customize the indicator... depending which one, ask user for buy value(-x%)....rebuy delay:int....\n    Sell strategy: GAIN... sell profit %\n     optional future: trailing buy/sell... stop loss.... DCA system... average bag values(for sell strategy)\n    */\n\n  const onSubmit = (a, b, c) => {\n    console.log(a, b, c);\n  };\n\n  switch (backtest.indicator) {\n    case 'RSI':\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-3\",\n          children: [backtest.indicator, /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: () => onSubmit(),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Select Interval:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: console.log(\"handlehcaange\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  value: \"grapefruit\",\n                  children: \"Daily\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"lime\",\n                  children: \"60 minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"coconut\",\n                  children: \"15 minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteBacktest(backtest.id),\n              className: \"btn-primary w-25\",\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn-secondary w-25\",\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n\n    case 'EMA':\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [backtest.indicator, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteBacktest(backtest.id),\n          className: \"btn-primary\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n\n    case 'SMA':\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [backtest.indicator, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteBacktest(backtest.id),\n          className: \"btn-primary\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"default item\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteBacktest(backtest.id),\n          className: \"btn-primary\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this);\n  }\n};\n\n_s(Backtest, \"oPHr7xrncWbQhbS30w7Ae3iAyXs=\");\n\n_c = Backtest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Backtest\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Backtest.js"],"names":["React","useContext","GlobalContext","Backtest","backtest","deleteBacktest","onSubmit","a","b","c","console","log","indicator","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAqBJ,UAAU,CAACC,aAAD,CAArC;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAME,QAAMI,QAAQ,GAAG,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,KAAW;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAAcC,CAAd,EAAgBC,CAAhB;AAED,GAHD;;AAMA,UAAOL,QAAQ,CAACQ,SAAhB;AACE,SAAK,KAAL;AACE,0BACE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,qBAEGR,QAAQ,CAACQ,SAFZ,eAGE;AAAM,YAAA,QAAQ,EAAE,MAAMN,QAAQ,EAA9B;AAAA,oCAIE;AAAA,0DAEE;AAAQ,gBAAA,QAAQ,EAAEI,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAlB;AAAA,wCACE;AAAQ,kBAAA,QAAQ,MAAhB;AAAiB,kBAAA,KAAK,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAQ,kBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAQ,kBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAcE;AAAQ,cAAA,OAAO,EAAE,MAAMN,cAAc,CAACD,QAAQ,CAACS,EAAV,CAArC;AAAoD,cAAA,SAAS,EAAC,kBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,eAiBE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;;AA4BF,SAAK,KAAL;AACE,0BACE;AAAA,mBAEGT,QAAQ,CAACQ,SAFZ,eAGE;AACI,UAAA,OAAO,EAAE,MAAMP,cAAc,CAACD,QAAQ,CAACS,EAAV,CADjC;AACgD,UAAA,SAAS,EAAC,aAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;;AAUF,SAAK,KAAL;AACE,0BACE;AAAA,mBAEGT,QAAQ,CAACQ,SAFZ,eAGE;AACI,UAAA,OAAO,EAAE,MAAMP,cAAc,CAACD,QAAQ,CAACS,EAAV,CADjC;AACgD,UAAA,SAAS,EAAC,aAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;;AAUF;AACE,0BACE;AAAA,gDAEE;AACI,UAAA,OAAO,EAAE,MAAMR,cAAc,CAACD,QAAQ,CAACS,EAAV,CADjC;AACgD,UAAA,SAAS,EAAC,aAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AArDJ;AA+DD,CA9FM;;GAAMV,Q;;KAAAA,Q","sourcesContent":["import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Backtest = ({ backtest }) => {\n  const { deleteBacktest } = useContext(GlobalContext);\n\n  /*\n    ema: function, symbol, interval,time period, series type,\n    Sma: function, symbol, interval,time period, series type,\n    rsi: function, symbol, interval,time period, series type\n\n    //do below later\n    bba: function, symbol, interval,time period, series type, (optionals: dev up, dev down, move avg type)\n    MACD:function, symbol, interval, series type, (optional: fastperiod, slow period, signalperiod)\n    OBv: function, symbol, interval\n    STOCH: function, symbol, interval, (optionals: fast K period, slow K period, slow D period, slow K ma type, slow D ma type)\n\n    pair settings:\n    max bags : int\n    inital balance: int\n    inital bag cost: int or percent\n    strategy: selected already... customize the indicator... depending which one, ask user for buy value(-x%)....rebuy delay:int....\n    Sell strategy: GAIN... sell profit %\n\n    optional future: trailing buy/sell... stop loss.... DCA system... average bag values(for sell strategy)\n\n\n  */\n  const onSubmit = (a,b,c) => {\n    console.log(a,b,c);\n\n  }\n\n\n  switch(backtest.indicator){\n    case 'RSI':\n      return (\n        <li>\n          <div className='card col-3'>\n            {/* title */}\n            {backtest.indicator}\n            <form onSubmit={() => onSubmit()}>\n\n\n              {/* time interval */}\n              <label>\n                Select Interval:\n                <select onChange={console.log(\"handlehcaange\")}>\n                  <option selected value=\"grapefruit\">Daily</option>\n                  <option value=\"lime\">60 minutes</option>\n                  <option value=\"coconut\">15 minutes</option>\n                </select>\n              </label>\n\n              {/* close button */}\n              <button onClick={() => deleteBacktest(backtest.id)} className=\"btn-primary w-25\">x</button>\n\n              {/* submit button */}\n              <button type='submit' className=\"btn-secondary w-25\">x</button>\n\n            </form>\n          </div>\n        </li>\n      )\n    case 'EMA':\n      return (\n        <li>\n          {/* like a div here, has buttons/ parameters... case statement to catch the indicator type and determine return type */}\n          {backtest.indicator}\n          <button \n              onClick={() => deleteBacktest(backtest.id)} className=\"btn-primary\">x\n              \n          </button>\n        </li>\n      )\n    case 'SMA':\n      return (\n        <li>\n          {/* like a div here, has buttons/ parameters... case statement to catch the indicator type and determine return type */}\n          {backtest.indicator} \n          <button \n              onClick={() => deleteBacktest(backtest.id)} className=\"btn-primary\">x\n              \n          </button>\n        </li>\n      )\n    default:\n      return (\n        <li>\n          default item\n          <button \n              onClick={() => deleteBacktest(backtest.id)} className=\"btn-primary\">x\n          </button>\n        </li>\n      )\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module"}