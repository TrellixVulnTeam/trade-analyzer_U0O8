{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Backtest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nexport const Backtest = ({\n  backtest\n}) => {\n  _s();\n\n  const {\n    deleteBacktest\n  } = useContext(GlobalContext);\n  const sign = backtest.amount < 0 ? '-' : '+';\n  /*\n    ema: function, symbol, interval,time period, series type,\n    Sma: function, symbol, interval,time period, series type,\n    rsi: function, symbol, interval,time period, series type\n    bba: function, symbol, interval,time period, series type, (optionals: dev up, dev down, move avg type)\n    MACD:function, symbol, interval, series type, (optional: fastperiod, slow period, signalperiod)\n    OBv: function, symbol, interval\n    STOCH: function, symbol, interval, (optionals: fast K period, slow K period, slow D period, slow K ma type, slow D ma type)\n     pair settings:\n    max bags : int\n    inital balance: int\n    inital bag cost: int or percent\n    strategy: selected already... customize the indicator... depending which one, ask user for buy value(-x%)....rebuy delay:int....\n    Sell strategy: GAIN... sell profit %\n     optional future: trailing buy/sell... stop loss.... DCA system... average bag values(for sell strategy)\n    */\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: backtest.amount < 0 ? 'minus' : 'plus',\n    children: [backtest.indicator, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [sign, \"$\", Math.abs(backtest.amount)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteBacktest(backtest.id),\n      className: \"btn-primary\",\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Backtest, \"oPHr7xrncWbQhbS30w7Ae3iAyXs=\");\n\n_c = Backtest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Backtest\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Backtest.js"],"names":["React","useContext","GlobalContext","Backtest","backtest","deleteBacktest","sign","amount","indicator","Math","abs","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAqBJ,UAAU,CAACC,aAAD,CAArC;AAEA,QAAMI,IAAI,GAAGF,QAAQ,CAACG,MAAT,GAAkB,CAAlB,GAAsB,GAAtB,GAA4B,GAAzC;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOE,sBACE;AAAI,IAAA,SAAS,EAAEH,QAAQ,CAACG,MAAT,GAAkB,CAAlB,GAAsB,OAAtB,GAAgC,MAA/C;AAAA,eAEGH,QAAQ,CAACI,SAFZ,oBAEuB;AAAA,iBAAOF,IAAP,OAAcG,IAAI,CAACC,GAAL,CAASN,QAAQ,CAACG,MAAlB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFvB,eAGE;AACI,MAAA,OAAO,EAAE,MAAMF,cAAc,CAACD,QAAQ,CAACO,EAAV,CADjC;AACgD,MAAA,SAAS,EAAC,aAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArCM;;GAAMR,Q;;KAAAA,Q","sourcesContent":["import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Backtest = ({ backtest }) => {\n  const { deleteBacktest } = useContext(GlobalContext);\n\n  const sign = backtest.amount < 0 ? '-' : '+';\n\n  /*\n    ema: function, symbol, interval,time period, series type,\n    Sma: function, symbol, interval,time period, series type,\n    rsi: function, symbol, interval,time period, series type\n    bba: function, symbol, interval,time period, series type, (optionals: dev up, dev down, move avg type)\n    MACD:function, symbol, interval, series type, (optional: fastperiod, slow period, signalperiod)\n    OBv: function, symbol, interval\n    STOCH: function, symbol, interval, (optionals: fast K period, slow K period, slow D period, slow K ma type, slow D ma type)\n\n    pair settings:\n    max bags : int\n    inital balance: int\n    inital bag cost: int or percent\n    strategy: selected already... customize the indicator... depending which one, ask user for buy value(-x%)....rebuy delay:int....\n    Sell strategy: GAIN... sell profit %\n\n    optional future: trailing buy/sell... stop loss.... DCA system... average bag values(for sell strategy)\n\n\n  */\n\n\n  return (\n    <li className={backtest.amount < 0 ? 'minus' : 'plus'}>\n      {/* like a div here, has buttons/ parameters... case statement to catch the indicator type and determine return type */}\n      {backtest.indicator} <span>{sign}${Math.abs(backtest.amount)}</span>\n      <button \n          onClick={() => deleteBacktest(backtest.id)} className=\"btn-primary\">x\n          \n      </button>\n    </li>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}