{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/chart-components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as d3 from \"d3\";\nimport Candle from \"./Candle\";\nimport CrossHairs from \"./CrossHairs\";\n\nconst Chart = props => {\n  _s();\n\n  const {\n    data,\n    width: chart_width,\n    height: chart_height\n  } = props; // let { last_bar_idx = 0, bars_wide = 40 } = props;\n  // last_bar_idx should default to the last bar in the data, or else be sure passed-in value doesn't exceed the last bar\n  // last_bar_idx = last_bar_idx > 0 ? Math.min(last_bar_idx, data.length - 1) : data.length - 1;\n\n  const [mouseCoords, setMouseCoords] = useState({\n    x: 0,\n    y: 0\n  }); // let mouseCoords = {\n  //   x: 0,\n  //   y: 0\n  // };\n  // const setMouseCoords = (x, y) => {\n  //   mouseCoords = { x, y };\n  // };\n  // find the high and low bounds of all the bars being sidplayed\n\n  const dollar_high = d3.max(data.map(bar => bar.high)) * 1.15;\n  const dollar_low = d3.min(data.map(bar => bar.low)) * 0.95;\n  const chart_dims = {\n    pixel_width: chart_width,\n    pixel_height: chart_height,\n    dollar_high,\n    dollar_low,\n    dollar_delta: dollar_high - dollar_low\n  }; // toFixed rounds number to 2 decimal places\n\n  const dollarAt = pixel => {\n    const dollar = Math.abs(pixel - chart_dims.pixel_height) / chart_dims.pixel_height * chart_dims.dollar_delta + chart_dims.dollar_low;\n    return pixel > 0 ? dollar.toFixed(2) : \"-\";\n  }; // dates[mouse x cord percent away from left TIMES num_bars]\n\n\n  const dateTimeAt = pixel => {\n    if (pixel <= 0 || pixel >= chart_dims.pixel_width) return \"-\";\n    const dateTime = data[Math.floor(pixel / chart_dims.pixel_width * data.length)]['xAxis'];\n    return dateTime;\n  };\n\n  const pixelFor = dollar => {\n    return Math.abs((dollar - chart_dims[\"dollar_low\"]) / chart_dims[\"dollar_delta\"] * chart_dims[\"pixel_height\"] - chart_dims[\"pixel_height\"]);\n  };\n\n  const onMouseLeave = () => {\n    setMouseCoords({\n      x: -50,\n      y: -50\n    });\n  };\n\n  const onMouseMoveInside = e => {\n    //for date(x axis), calc using dates[x cord/width] , create dates[]\n    setMouseCoords({\n      x: e.nativeEvent.x - Math.round(e.currentTarget.getBoundingClientRect().left),\n      y: e.nativeEvent.y - Math.round(e.currentTarget.getBoundingClientRect().top)\n    });\n  };\n\n  const onMouseClickInside = e => {\n    console.log(`Click at ${e.nativeEvent.offsetX}, ${e.nativeEvent.offsetY}`);\n  }; // calculate the candle width\n\n\n  const candle_width = Math.floor(chart_width / data.length * 0.7);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: chart_width * 1.025\n    /* Extra width to fit price */\n    ,\n    height: chart_height,\n    className: \"chart\",\n    onMouseMove: onMouseMoveInside,\n    onClick: onMouseClickInside,\n    onMouseLeave: onMouseLeave,\n    children: [data.map((bar, i) => {\n      const candle_x = chart_width / (data.length + 1) * (i + 1);\n      return /*#__PURE__*/_jsxDEV(Candle, {\n        data: bar,\n        x: chart_width + candle_x,\n        candle_width: candle_width,\n        pixelFor: pixelFor\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(CrossHairs, {\n      x: mouseCoords.x,\n      y: mouseCoords.y,\n      chart_dims: chart_dims\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: chart_width * 1.025 - (1 + dollarAt(mouseCoords.y).length) * 10,\n      y: mouseCoords.y - 12,\n      width: (1 + dollarAt(mouseCoords.y).length) * 10,\n      height: \"25\",\n      fill: \"white\",\n      rx: \"9\",\n      ry: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"10\",\n      y: \"16\",\n      fill: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(\"tspan\", {\n        x: 5 + chart_width * 1.025 - (1 + dollarAt(mouseCoords.y).length) * 10,\n        y: mouseCoords.y + 5,\n        fill: \"black\",\n        fontSize: \"15\",\n        children: [\"$\", dollarAt(mouseCoords.y)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tspan\", {\n        x: chart_width / 2 - dateTimeAt(mouseCoords.x).length * 5,\n        y: \"32\",\n        fill: \"grey\",\n        fontSize: \"30\",\n        children: dateTimeAt(mouseCoords.x)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"bqU/f0m+/8m5rd/Kykxo05WCGUU=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/chart-components/Chart.js"],"names":["React","useState","d3","Candle","CrossHairs","Chart","props","data","width","chart_width","height","chart_height","mouseCoords","setMouseCoords","x","y","dollar_high","max","map","bar","high","dollar_low","min","low","chart_dims","pixel_width","pixel_height","dollar_delta","dollarAt","pixel","dollar","Math","abs","toFixed","dateTimeAt","dateTime","floor","length","pixelFor","onMouseLeave","onMouseMoveInside","e","nativeEvent","round","currentTarget","getBoundingClientRect","left","top","onMouseClickInside","console","log","offsetX","offsetY","candle_width","i","candle_x"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport * as d3 from \"d3\";\n\nimport Candle from \"./Candle\";\nimport CrossHairs from \"./CrossHairs\";\n\nconst Chart = props => {\n  const { data, width: chart_width, height: chart_height } = props;\n  // let { last_bar_idx = 0, bars_wide = 40 } = props;\n\n  // last_bar_idx should default to the last bar in the data, or else be sure passed-in value doesn't exceed the last bar\n  // last_bar_idx = last_bar_idx > 0 ? Math.min(last_bar_idx, data.length - 1) : data.length - 1;\n\n  const [mouseCoords, setMouseCoords] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // let mouseCoords = {\n  //   x: 0,\n  //   y: 0\n  // };\n\n  // const setMouseCoords = (x, y) => {\n  //   mouseCoords = { x, y };\n  // };\n\n  // find the high and low bounds of all the bars being sidplayed\n  const dollar_high = d3.max(data.map(bar => bar.high)) * 1.15;\n  const dollar_low = d3.min(data.map(bar => bar.low)) * 0.95;\n\n  const chart_dims = {\n    pixel_width: chart_width,\n    pixel_height: chart_height,\n    dollar_high,\n    dollar_low,\n    dollar_delta: dollar_high - dollar_low\n  };\n\n  // toFixed rounds number to 2 decimal places\n  const dollarAt = pixel => {\n    const dollar =\n      (Math.abs(pixel - chart_dims.pixel_height) / chart_dims.pixel_height) *\n        chart_dims.dollar_delta +\n      chart_dims.dollar_low;\n\n    return pixel > 0 ? dollar.toFixed(2) : \"-\";\n  };\n\n  // dates[mouse x cord percent away from left TIMES num_bars]\n  const dateTimeAt = pixel => {\n    if(pixel<=0 || pixel >= chart_dims.pixel_width) return \"-\";\n    const dateTime = data[Math.floor((pixel/ chart_dims.pixel_width) * data.length)]['xAxis'];\n\n    return dateTime;\n  };\n\n  const pixelFor = dollar => {\n    return Math.abs(\n      ((dollar - chart_dims[\"dollar_low\"]) / chart_dims[\"dollar_delta\"]) *\n        chart_dims[\"pixel_height\"] -\n        chart_dims[\"pixel_height\"]\n    );\n  };\n\n  const onMouseLeave = () => {\n    setMouseCoords({\n      x: -50,\n      y: -50\n    });\n  };\n\n  const onMouseMoveInside = e => {\n    //for date(x axis), calc using dates[x cord/width] , create dates[]\n    setMouseCoords({\n      x:\n        e.nativeEvent.x -\n        Math.round(e.currentTarget.getBoundingClientRect().left),\n      y:\n        e.nativeEvent.y -\n        Math.round(e.currentTarget.getBoundingClientRect().top)\n    });\n  };\n\n  const onMouseClickInside = e => {\n    console.log(`Click at ${e.nativeEvent.offsetX}, ${e.nativeEvent.offsetY}`);\n  };\n\n  // calculate the candle width\n  const candle_width = Math.floor((chart_width / data.length) * 0.7);\n  return (\n    <svg\n      width={chart_width*1.025 /* Extra width to fit price */}\n      height={chart_height}\n      className=\"chart\"\n      onMouseMove={onMouseMoveInside}\n      onClick={onMouseClickInside}\n      onMouseLeave={onMouseLeave}\n    >\n      {data.map((bar, i) => {\n        const candle_x = (chart_width / (data.length + 1)) * (i + 1);\n\n        return (\n          <Candle\n            key={i}\n            data={bar}\n            x={chart_width + candle_x}\n            candle_width={candle_width}\n            pixelFor={pixelFor}\n          />\n        );\n      })}\n\n      <CrossHairs x={mouseCoords.x} y={mouseCoords.y} chart_dims={chart_dims} />\n      \n      <rect x={(chart_width*1.025)-(1+dollarAt(mouseCoords.y).length)*10} y={mouseCoords.y-12} width={(1+dollarAt(mouseCoords.y).length)*10} height='25' fill=\"white\" rx='9' ry='9'>{/* background color for price */}</rect>\n      <text x=\"10\" y=\"16\" fill=\"white\">\n        {/* <tspan>\n          Mouse: {mouseCoords.x}, {mouseCoords.y}\n        </tspan> */}\n        \n        <tspan x={5 + (chart_width*1.025)-(1+dollarAt(mouseCoords.y).length)*10} y={mouseCoords.y+5} fill='black' fontSize=\"15\">\n          ${dollarAt(mouseCoords.y)}\n        </tspan>\n        <tspan x={chart_width/2 - (dateTimeAt(mouseCoords.x).length*5)} y='32' fill='grey' fontSize='30'>\n          {dateTimeAt(mouseCoords.x)}\n        </tspan>\n        \n      </text>\n    </svg>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}