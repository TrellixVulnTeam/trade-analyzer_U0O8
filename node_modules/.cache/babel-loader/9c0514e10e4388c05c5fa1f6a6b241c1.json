{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Backtest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nexport const Backtest = ({\n  backtest\n}) => {\n  _s();\n\n  const [seriesType, setSeriesType] = useState('open');\n  const [timePeriod, setTimePeriod] = useState('14');\n  const [stdDeviation, setStdDeviation] = useState(2);\n  const [maxBags, setMaxBags] = useState(5);\n  const [initalBalance, setInitialBalance] = useState(10000);\n  const [initalBuyType, setInitalBuyType] = useState('usd');\n  const [initalBuyAmount, setInitalBuyAmount] = useState(1500);\n  const [buyStrategyValue, setBuyStrategyValue] = useState(30);\n  const [sellStrategyValue, setSellStrategyValue] = useState(1);\n  const {\n    deleteBacktest\n  } = useContext(GlobalContext);\n  /*\n    ema: function, symbol, interval,time period, series type,\n    Sma: function, symbol, interval,time period, series type,\n    rsi: function, symbol, interval,time period, series type\n     //do below later\n    bba: function, symbol, interval,time period, series type, (optionals: dev up, dev down, move avg type)\n    MACD:function, symbol, interval, series type, (optional: fastperiod, slow period, signalperiod)\n    OBv: function, symbol, interval\n    STOCH: function, symbol, interval, (optionals: fast K period, slow K period, slow D period, slow K ma type, slow D ma type)\n     pair settings:\n    max bags : int\n    inital balance: int\n    inital bag cost: int or percent\n    strategy: selected already... customize the indicator... depending which one, ask user for buy value(-x%)....rebuy delay:int....\n    Sell strategy: GAIN... sell profit %\n     optional future: trailing buy/sell... stop loss.... DCA system... average bag values(for sell strategy)\n    */\n\n  const dropdownItems = items => {\n    return items.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item.value,\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 30\n    }, this));\n  };\n\n  const onSubmit = () => {\n    const paperAPICall = {\n      indicator: backtest.indicator,\n      //this kinda optional bc current_symbol is in global state already...\n      // symbol: current_symbol,....interval: daily..\n      seriesType: seriesType,\n      timePeriod: +timePeriod\n    };\n    const pairSettings = {\n      maxBags: +maxBags,\n      initalBalance: +initalBalance,\n      initalBuyType: initalBuyType,\n      initalBuyAmount: +initalBuyAmount,\n      buyStrategyValue: +buyStrategyValue,\n      sellStrategyValue: +sellStrategyValue\n    }; // Ensure no trivial strategies are submitted\n\n    if (pairSettings.maxBags < 1 || pairSettings.initalBalance < 1 || pairSettings.initalBuyAmount < 1 || pairSettings.sellStrategyValue < 0 || pairSettings.timePeriod < 1) {\n      // Bags, balance, timeperiod, buy amount, sell gain% must be positive\n      alert(\"Please enter valid inputs. Use positive integers.\");\n    } else if (pairSettings.initalBuyType === 'percent' && (pairSettings.initalBuyAmount < 1 || pairSettings.initalBuyAmount > 100)) {\n      // if(buy type is percent) buy amount must be (0-100]\n      alert(\"Buy amount must be 1-100%\");\n    } else if (pairSettings.initalBuyAmount > pairSettings.initalBalance) {\n      // inital buy must be < inital balance\n      alert(\"Inital buys must be less than or equal to inital balance.\");\n    } // Ensure no trivial strategy specific settings are submitted <connect to previous if chain thing>\n\n\n    if (backtest.indicator === 'RSI' && (pairSettings.buyStrategyValue < 1 || pairSettings.buyStrategyValue > 99)) {\n      alert(\"RSI values must be between 1-99\");\n    } // Ensure no trivial BB std deviation\n\n\n    if (backtest.indicator === 'BB' && pairSettings.stdDeviation < 0.5) {\n      alert(\"Standard Deviation must be greater than or equal to 0.5.\");\n    }\n\n    console.log(paperAPICall, pairSettings);\n  };\n\n  let indicatorSettingDOM = null;\n\n  switch (backtest.indicator) {\n    case 'RSI':\n      indicatorSettingDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Time Period:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"14\",\n            onChange: e => setTimePeriod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n      break;\n\n    case 'EMA':\n      indicatorSettingDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Time Period:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"9\",\n            onChange: e => setTimePeriod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n      break;\n\n    case 'SMA':\n      indicatorSettingDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Time Period:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"9\",\n            onChange: e => setTimePeriod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n      break;\n\n    case 'BB':\n      indicatorSettingDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Time Period:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"20\",\n            onChange: e => setTimePeriod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Standard Deviation for high/low lines:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"20\",\n            onChange: e => setStdDeviation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 'next one here':\n      //code\n      break;\n\n    default:\n      indicatorSettingDOM = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"indicaator setting dom default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 30\n      }, this);\n  }\n\n  let buyStrategyDOM = null;\n\n  switch (backtest.indicator) {\n    case 'RSI':\n      buyStrategyDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Buy at RSI \", \"<\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"30\",\n            onChange: e => setBuyStrategyValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n      break;\n\n    case 'EMA':\n      buyStrategyDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Time Period:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"9\",\n            onChange: e => setTimePeriod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n      break;\n\n    case 'SMA':\n      buyStrategyDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Time Period:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"9\",\n            onChange: e => setTimePeriod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n      break;\n\n    case 'BB':\n      buyStrategyDOM = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"bb custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }, this);\n      break;\n\n    case 'next one here':\n      //code\n      break;\n\n    default:\n      buyStrategyDOM = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sell strat dom default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mx-4 my-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-25\",\n      children: [backtest.indicator, \" Settings\", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Series Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSeriesType(e.target.value),\n          children: dropdownItems([{\n            name: 'open',\n            value: 'open'\n          }, {\n            name: 'close',\n            value: 'close'\n          }, {\n            name: 'high',\n            value: 'high'\n          }, {\n            name: 'low',\n            value: 'low'\n          }])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), indicatorSettingDOM, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Paper Bot Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Max number of bags:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"5\",\n          onChange: e => setMaxBags(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Inital balance (USD):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          placeholder: \"10000\",\n          onChange: e => setInitialBalance(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Inital buy type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setInitalBuyType(e.target.value),\n          children: dropdownItems([{\n            name: '($) USD',\n            value: 'usd'\n          }, {\n            name: '(%) Percent of Balance',\n            value: 'percent'\n          }, {\n            name: '(#) Number of Stocks',\n            value: 'numStocks'\n          }])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Inital buy amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"1500\",\n          onChange: e => setInitalBuyAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), buyStrategyDOM, /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sell at\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"1\",\n          onChange: e => setSellStrategyValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), \"% profit.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSubmit(),\n        className: \"btn-secondary w-25\",\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteBacktest(backtest.id),\n        className: \"btn-primary w-25\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-75\",\n      children: \"results baby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Backtest, \"4eRZpVWFKYrp/ySW+RDhTINmP+I=\");\n\n_c = Backtest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Backtest\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Backtest.js"],"names":["React","useState","useContext","GlobalContext","Backtest","backtest","seriesType","setSeriesType","timePeriod","setTimePeriod","stdDeviation","setStdDeviation","maxBags","setMaxBags","initalBalance","setInitialBalance","initalBuyType","setInitalBuyType","initalBuyAmount","setInitalBuyAmount","buyStrategyValue","setBuyStrategyValue","sellStrategyValue","setSellStrategyValue","deleteBacktest","dropdownItems","items","map","item","value","name","onSubmit","paperAPICall","indicator","pairSettings","alert","console","log","indicatorSettingDOM","e","target","buyStrategyDOM","id"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Backtest = ({ backtest }) => {\n  const [seriesType, setSeriesType] = useState('open');\n  const [timePeriod, setTimePeriod] = useState('14');\n  const [stdDeviation, setStdDeviation] = useState(2);\n\n  const [maxBags, setMaxBags] = useState(5);\n  const [initalBalance, setInitialBalance] = useState(10000);\n  const [initalBuyType, setInitalBuyType] = useState('usd');\n  const [initalBuyAmount, setInitalBuyAmount] = useState(1500);\n  const [buyStrategyValue, setBuyStrategyValue] = useState(30);\n  const [sellStrategyValue, setSellStrategyValue] = useState(1);\n\n  const { deleteBacktest } = useContext(GlobalContext);\n\n  /*\n    ema: function, symbol, interval,time period, series type,\n    Sma: function, symbol, interval,time period, series type,\n    rsi: function, symbol, interval,time period, series type\n\n    //do below later\n    bba: function, symbol, interval,time period, series type, (optionals: dev up, dev down, move avg type)\n    MACD:function, symbol, interval, series type, (optional: fastperiod, slow period, signalperiod)\n    OBv: function, symbol, interval\n    STOCH: function, symbol, interval, (optionals: fast K period, slow K period, slow D period, slow K ma type, slow D ma type)\n\n    pair settings:\n    max bags : int\n    inital balance: int\n    inital bag cost: int or percent\n    strategy: selected already... customize the indicator... depending which one, ask user for buy value(-x%)....rebuy delay:int....\n    Sell strategy: GAIN... sell profit %\n\n    optional future: trailing buy/sell... stop loss.... DCA system... average bag values(for sell strategy)\n\n\n  */\n\n  const dropdownItems = (items) => {\n    return items.map(item => <option value={item.value}>{item.name}</option>);\n  }\n\n  const onSubmit = () => {\n\n    const paperAPICall = { \n      indicator: backtest.indicator,\n      //this kinda optional bc current_symbol is in global state already...\n      // symbol: current_symbol,....interval: daily..\n      seriesType: seriesType,\n      timePeriod: +timePeriod\n    };\n\n    const pairSettings = {\n      maxBags: +maxBags,\n      initalBalance: +initalBalance,\n      initalBuyType: initalBuyType,\n      initalBuyAmount: +initalBuyAmount,\n      buyStrategyValue: +buyStrategyValue,\n      sellStrategyValue: +sellStrategyValue\n    }\n    // Ensure no trivial strategies are submitted\n    if(pairSettings.maxBags<1 || pairSettings.initalBalance<1 || pairSettings.initalBuyAmount<1 || pairSettings.sellStrategyValue<0 || pairSettings.timePeriod<1){\n      // Bags, balance, timeperiod, buy amount, sell gain% must be positive\n      alert(\"Please enter valid inputs. Use positive integers.\");\n    }else if(pairSettings.initalBuyType==='percent' && (pairSettings.initalBuyAmount<1 || pairSettings.initalBuyAmount>100)){\n      // if(buy type is percent) buy amount must be (0-100]\n      alert(\"Buy amount must be 1-100%\");\n    }else if (pairSettings.initalBuyAmount>pairSettings.initalBalance){\n      // inital buy must be < inital balance\n      alert(\"Inital buys must be less than or equal to inital balance.\");\n    }\n\n    // Ensure no trivial strategy specific settings are submitted <connect to previous if chain thing>\n    if(backtest.indicator==='RSI' && (pairSettings.buyStrategyValue<1 || pairSettings.buyStrategyValue>99)){\n      alert(\"RSI values must be between 1-99\");\n    }\n\n    // Ensure no trivial BB std deviation\n    if(backtest.indicator==='BB' && pairSettings.stdDeviation<0.5){\n      alert(\"Standard Deviation must be greater than or equal to 0.5.\")\n    }\n\n    console.log(paperAPICall, pairSettings);\n  }\n\n  let indicatorSettingDOM = null;\n  switch(backtest.indicator){\n    case 'RSI':\n      indicatorSettingDOM = (<> \n        {/* Time Period(# candles in calc) */}\n        <label>\n          Time Period:\n          <input type='number' placeholder='14' onChange={(e) => setTimePeriod(e.target.value)} />\n        </label>\n      </>);\n      break;\n    case 'EMA':\n      indicatorSettingDOM = (<> \n        {/* Time Period(# candles in calc) */}\n        <label>\n          Time Period:\n          <input type='number' placeholder='9' onChange={(e) => setTimePeriod(e.target.value)} />\n        </label>\n      </>);\n      break;\n    case 'SMA':\n      indicatorSettingDOM = (<> \n        {/* Time Period(# candles in calc) */}\n        <label>\n          Time Period:\n          <input type='number' placeholder='9' onChange={(e) => setTimePeriod(e.target.value)} />\n        </label>\n      </>);\n      break;\n    case 'BB':\n      indicatorSettingDOM = (<> \n        {/* Time Period(# candles in calc) */}\n        <label>\n          Time Period:\n          <input type='number' placeholder='20' onChange={(e) => setTimePeriod(e.target.value)} />\n        </label>\n\n        {/* Standard deviation for both top/bot lines */}\n        <label>\n          Standard Deviation for high/low lines:\n          <input type='number' placeholder='20' onChange={(e) => setStdDeviation(e.target.value)} />\n        </label>\n      </>);\n      break;\n    case 'next one here':\n      //code\n      break;\n    default:\n      indicatorSettingDOM = (<div>indicaator setting dom default</div>);\n    \n  }\n\n  let buyStrategyDOM = null;\n  switch(backtest.indicator){\n    case 'RSI':\n      buyStrategyDOM = (<> \n        {/* Buy Strategy */}\n        <label>\n          Buy at RSI {\"<\"}\n          <input type='number' placeholder='30' onChange={(e) => setBuyStrategyValue(e.target.value)} />\n        </label>\n      </>);\n      break;\n    case 'EMA':\n      buyStrategyDOM = (<> \n        {/* Time Period(# candles in calc) */}\n        <label>\n          Time Period:\n          <input type='number' placeholder='9' onChange={(e) => setTimePeriod(e.target.value)} />\n        </label>\n      </>);\n      break;\n    case 'SMA':\n      buyStrategyDOM = (<> \n        {/* Time Period(# candles in calc) */}\n        <label>\n          Time Period:\n          <input type='number' placeholder='9' onChange={(e) => setTimePeriod(e.target.value)} />\n        </label>\n      </>);\n      break;\n    case 'BB':\n      buyStrategyDOM = (<div>bb custom</div>);\n      break;\n    case 'next one here':\n      //code\n      break;\n    default:\n      buyStrategyDOM = (<div>sell strat dom default</div>);\n    \n  }\n\n  return (\n    <div className='row mx-4 my-2'>\n      <div className='card w-25'>\n        {/* Beginning of Settings */}\n        {backtest.indicator} Settings\n\n        {/* series type */}\n        <label>\n          Select Series Type:\n          <select onChange={(e) => setSeriesType(e.target.value)}>\n            {dropdownItems([\n              {name:'open', value:'open'},\n              {name:'close', value:'close'},\n              {name:'high', value:'high'},\n              {name:'low', value:'low'}])}\n          </select>\n        </label>\n        \n        {indicatorSettingDOM}\n\n        <br/>\n\n        <label>Paper Bot Settings</label>\n        {/* Max number bags */}\n        <label>\n          Max number of bags:\n          <input type='number' placeholder='5' onChange={(e) => setMaxBags(e.target.value)} />\n        </label>\n\n        {/* Inital balance */}\n        <label>\n        Inital balance (USD):\n          <input type='number' min='0' placeholder='10000' onChange={(e) => setInitialBalance(e.target.value)} />\n        </label>\n\n        {/* Inital buy (type/amount) */}\n        <label>\n        Inital buy type:\n          <select onChange={(e) => setInitalBuyType(e.target.value)}>\n            {dropdownItems([\n                {name:'($) USD', value:'usd'},\n                {name:'(%) Percent of Balance', value:'percent'},\n                {name:'(#) Number of Stocks', value:'numStocks'}])}\n            </select>\n        </label>\n        <label>\n        Inital buy amount:\n          <input type='number' placeholder='1500' onChange={(e) => setInitalBuyAmount(e.target.value)} />\n        </label>\n\n        {buyStrategyDOM}\n\n        {/* Sell Strategy */}\n        <label>\n          Sell at \n          <input type='number' placeholder='1' onChange={(e) => setSellStrategyValue(e.target.value)} />\n          % profit.\n        </label>\n\n        {/* submit button */}\n        <button onClick={() => onSubmit()} className=\"btn-secondary w-25\">Calculate</button>\n\n\n        {/* close button */}\n        <button onClick={() => deleteBacktest(backtest.id)} className=\"btn-primary w-25\">x</button>\n      </div>\n      {/* end of settings, beginning of results */}\n\n      <div className='card w-75'>results baby</div>\n      \n      {/* End of results */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}