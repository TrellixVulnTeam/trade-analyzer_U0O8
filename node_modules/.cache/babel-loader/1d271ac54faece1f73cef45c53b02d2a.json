{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Balance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useEffect, useState } from 'react';\nimport { select } from 'd3';\nimport { GlobalContext } from '../context/GlobalState';\nexport const Balance = () => {\n  _s();\n\n  const {\n    transactions\n  } = useContext(GlobalContext);\n  const amounts = transactions.map(transaction => transaction.amount);\n  const total = amounts.reduce((acc, item) => acc += item, 0).toFixed(2); //temp graph d3 example\n\n  const [data] = useState([25, 33, 44, 53, 23]);\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = d3.create(\"svg\").attr(\"viewBox\", [0, 0, width, height]);\n    svg.append(\"g\").call(xAxis);\n    svg.append(\"g\").call(yAxis);\n    const g = svg.append(\"g\").attr(\"stroke-linecap\", \"round\").attr(\"stroke\", \"black\").selectAll(\"g\").data(data).join(\"g\").attr(\"transform\", d => `translate(${x(d.date)},0)`);\n    g.append(\"line\").attr(\"y1\", d => y(d.low)).attr(\"y2\", d => y(d.high));\n    g.append(\"line\").attr(\"y1\", d => y(d.open)).attr(\"y2\", d => y(d.close)).attr(\"stroke-width\", x.bandwidth()).attr(\"stroke\", d => d.open > d.close ? d3.schemeSet1[0] : d.close > d.open ? d3.schemeSet1[2] : d3.schemeSet1[8]);\n    g.append(\"title\").text(d => `${formatDate(d.date)}\nOpen: ${formatValue(d.open)}\nClose: ${formatValue(d.close)} (${formatChange(d.open, d.close)})\nLow: ${formatValue(d.low)}\nHigh: ${formatValue(d.high)}`); //add .attr here to effect ALL circles\n  }, [data]); //------end d3 ex code------- also imports\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"$\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Balance, \"bv+wquWEzp1d6gUVOQGgD73WDXE=\");\n\n_c = Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Balance.js"],"names":["React","useContext","useRef","useEffect","useState","select","GlobalContext","Balance","transactions","amounts","map","transaction","amount","total","reduce","acc","item","toFixed","data","svgRef","svg","d3","create","attr","width","height","append","call","xAxis","yAxis","g","selectAll","join","d","x","date","y","low","high","open","close","bandwidth","schemeSet1","text","formatDate","formatValue","formatChange"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useEffect, useState } from 'react';\nimport { select } from 'd3';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  //temp graph d3 example\n  const [data] = useState([25,33,44,53,23]);\n  const svgRef = useRef();\n\n  useEffect( () => {\n    const svg = d3.create(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height]);\n\n  svg.append(\"g\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .call(yAxis);\n\n  const g = svg.append(\"g\")\n      .attr(\"stroke-linecap\", \"round\")\n      .attr(\"stroke\", \"black\")\n    .selectAll(\"g\")\n    .data(data)\n    .join(\"g\")\n      .attr(\"transform\", d => `translate(${x(d.date)},0)`);\n\n  g.append(\"line\")\n      .attr(\"y1\", d => y(d.low))\n      .attr(\"y2\", d => y(d.high));\n\n  g.append(\"line\")\n      .attr(\"y1\", d => y(d.open))\n      .attr(\"y2\", d => y(d.close))\n      .attr(\"stroke-width\", x.bandwidth())\n      .attr(\"stroke\", d => d.open > d.close ? d3.schemeSet1[0]\n          : d.close > d.open ? d3.schemeSet1[2]\n          : d3.schemeSet1[8]);\n\n  g.append(\"title\")\n      .text(d => `${formatDate(d.date)}\nOpen: ${formatValue(d.open)}\nClose: ${formatValue(d.close)} (${formatChange(d.open, d.close)})\nLow: ${formatValue(d.low)}\nHigh: ${formatValue(d.high)}`);                                         //add .attr here to effect ALL circles\n\n  }, [data]);\n  //------end d3 ex code------- also imports\n  \n  return (\n    <>\n      <h4>Your Balance</h4>\n\n      <svg ref = {svgRef}> </svg>\n      <h1>${total}</h1>\n    </>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}