{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Backtest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nexport const Backtest = ({\n  backtest\n}) => {\n  _s();\n\n  const [seriesType, setSeriesType] = useState('open');\n  const [timePeriod, setTimePeriod] = useState('14');\n  const [maxBags, setMaxBags] = useState(5);\n  const [initalBalance, setInitialBalance] = useState(10000);\n  const [initalBuyType, setInitalBuyType] = useState('usd');\n  const [initalBuyAmount, setInitalBuyAmount] = useState(1500);\n  const [buyStrategyValue, setBuyStrategyValue] = useState(30);\n  const [sellStrategyValue, setSellStrategyValue] = useState(1);\n  const {\n    deleteBacktest\n  } = useContext(GlobalContext);\n  /*\n    ema: function, symbol, interval,time period, series type,\n    Sma: function, symbol, interval,time period, series type,\n    rsi: function, symbol, interval,time period, series type\n     //do below later\n    bba: function, symbol, interval,time period, series type, (optionals: dev up, dev down, move avg type)\n    MACD:function, symbol, interval, series type, (optional: fastperiod, slow period, signalperiod)\n    OBv: function, symbol, interval\n    STOCH: function, symbol, interval, (optionals: fast K period, slow K period, slow D period, slow K ma type, slow D ma type)\n     pair settings:\n    max bags : int\n    inital balance: int\n    inital bag cost: int or percent\n    strategy: selected already... customize the indicator... depending which one, ask user for buy value(-x%)....rebuy delay:int....\n    Sell strategy: GAIN... sell profit %\n     optional future: trailing buy/sell... stop loss.... DCA system... average bag values(for sell strategy)\n    */\n\n  const onSubmit = () => {\n    const paperAPICall = {\n      indicator: backtest.indicator,\n      //this kinda optional bc current_symbol is in global state already...\n      // symbol: current_symbol,....interval: daily..\n      seriesType: seriesType,\n      timePeriod: +timePeriod\n    };\n    const pairSettings = {\n      maxBags: +maxBags,\n      initalBalance: +initalBalance,\n      initalBuyType: initalBuyType,\n      initalBuyAmount: +initalBuyAmount,\n      buyStrategyValue: +buyStrategyValue,\n      sellStrategyValue: +sellStrategyValue\n    }; // Ensure no trivial strategies are submitted\n\n    if (pairSettings.maxBags < 1 || pairSettings.initalBalance < 1 || pairSettings.initalBuyAmount < 1 || pairSettings.sellStrategyValue < 0 || pairSettings.timePeriod < 1) {\n      // Bags, balance, timeperiod, buy amount, sell gain% must be positive\n      alert(\"Please enter valid inputs. Use positive integers.\");\n    } else if (pairSettings.initalBuyType === 'percent' && (pairSettings.initalBuyAmount < 1 || pairSettings.initalBuyAmount > 100)) {\n      // if(buy type is percent) buy amount must be (0-100]\n      alert(\"Buy amount must be 1-100%\");\n    } else if (pairSettings.initalBuyAmount > pairSettings.initalBalance) {\n      // inital buy must be < inital balance\n      alert(\"Inital buys must be less than or equal to inital balance.\");\n    } // Ensure no trivial strategy specific settings are submitted <connect to previous if chain thing>\n\n\n    if (backtest.indicator === 'RSI' && (pairSettings.buyStrategyValue < 1 || pairSettings.buyStrategyValue > 99)) {\n      alert(\"RSI values must be between 1-99\");\n    }\n\n    console.log(paperAPICall, pairSettings);\n  };\n\n  let customDOM = null;\n\n  switch (backtest.indicator) {\n    case 'RSI':\n      customDOM = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"you mother \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }, this);\n\n    case 'EMA':\n      customDOM = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"fucker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }, this);\n\n    case 'SMA':\n      customDOM = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"whore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }, this);\n\n    default:\n      customDOM = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"ass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mx-4 my-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-25\",\n      children: [backtest.indicator, \" Settings\", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Series Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSeriesType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"open\",\n            children: \"open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"close\",\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"high\",\n            children: \"high\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"low\",\n            children: \"low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time Period:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"14\",\n          onChange: e => setTimePeriod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Paper Bot Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Max number of bags:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"5\",\n          onChange: e => setMaxBags(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Inital balance (USD):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          placeholder: \"10000\",\n          onChange: e => setInitialBalance(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Inital buy type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setInitalBuyType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"usd\",\n            children: \"($) USD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"percent\",\n            children: \"(%) Percent of Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"numStocks\",\n            children: \"(#) Number of Stocks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Inital buy amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"1500\",\n          onChange: e => setInitalBuyAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Buy at RSI \", \"<\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"30\",\n          onChange: e => setBuyStrategyValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sell at\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"1\",\n          onChange: e => setSellStrategyValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), \"% profit.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSubmit(),\n        className: \"btn-secondary w-25\",\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteBacktest(backtest.id),\n        className: \"btn-primary w-25\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-75\",\n      children: \"results baby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Backtest, \"sk/xIgiKs+KTjVNcV38WSyCrqx0=\");\n\n_c = Backtest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Backtest\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Backtest.js"],"names":["React","useState","useContext","GlobalContext","Backtest","backtest","seriesType","setSeriesType","timePeriod","setTimePeriod","maxBags","setMaxBags","initalBalance","setInitialBalance","initalBuyType","setInitalBuyType","initalBuyAmount","setInitalBuyAmount","buyStrategyValue","setBuyStrategyValue","sellStrategyValue","setSellStrategyValue","deleteBacktest","onSubmit","paperAPICall","indicator","pairSettings","alert","console","log","customDOM","e","target","value","id"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Backtest = ({ backtest }) => {\n  const [seriesType, setSeriesType] = useState('open');\n  const [timePeriod, setTimePeriod] = useState('14');\n\n  const [maxBags, setMaxBags] = useState(5);\n  const [initalBalance, setInitialBalance] = useState(10000);\n  const [initalBuyType, setInitalBuyType] = useState('usd');\n  const [initalBuyAmount, setInitalBuyAmount] = useState(1500);\n  const [buyStrategyValue, setBuyStrategyValue] = useState(30);\n  const [sellStrategyValue, setSellStrategyValue] = useState(1);\n\n  const { deleteBacktest } = useContext(GlobalContext);\n\n  /*\n    ema: function, symbol, interval,time period, series type,\n    Sma: function, symbol, interval,time period, series type,\n    rsi: function, symbol, interval,time period, series type\n\n    //do below later\n    bba: function, symbol, interval,time period, series type, (optionals: dev up, dev down, move avg type)\n    MACD:function, symbol, interval, series type, (optional: fastperiod, slow period, signalperiod)\n    OBv: function, symbol, interval\n    STOCH: function, symbol, interval, (optionals: fast K period, slow K period, slow D period, slow K ma type, slow D ma type)\n\n    pair settings:\n    max bags : int\n    inital balance: int\n    inital bag cost: int or percent\n    strategy: selected already... customize the indicator... depending which one, ask user for buy value(-x%)....rebuy delay:int....\n    Sell strategy: GAIN... sell profit %\n\n    optional future: trailing buy/sell... stop loss.... DCA system... average bag values(for sell strategy)\n\n\n  */\n  const onSubmit = () => {\n\n    const paperAPICall = { \n      indicator: backtest.indicator,\n      //this kinda optional bc current_symbol is in global state already...\n      // symbol: current_symbol,....interval: daily..\n      seriesType: seriesType,\n      timePeriod: +timePeriod\n    };\n\n    const pairSettings = {\n      maxBags: +maxBags,\n      initalBalance: +initalBalance,\n      initalBuyType: initalBuyType,\n      initalBuyAmount: +initalBuyAmount,\n      buyStrategyValue: +buyStrategyValue,\n      sellStrategyValue: +sellStrategyValue\n    }\n    // Ensure no trivial strategies are submitted\n    if(pairSettings.maxBags<1 || pairSettings.initalBalance<1 || pairSettings.initalBuyAmount<1 || pairSettings.sellStrategyValue<0 || pairSettings.timePeriod<1){\n      // Bags, balance, timeperiod, buy amount, sell gain% must be positive\n      alert(\"Please enter valid inputs. Use positive integers.\");\n    }else if(pairSettings.initalBuyType==='percent' && (pairSettings.initalBuyAmount<1 || pairSettings.initalBuyAmount>100)){\n      // if(buy type is percent) buy amount must be (0-100]\n      alert(\"Buy amount must be 1-100%\");\n    }else if (pairSettings.initalBuyAmount>pairSettings.initalBalance){\n      // inital buy must be < inital balance\n      alert(\"Inital buys must be less than or equal to inital balance.\");\n    }\n\n    // Ensure no trivial strategy specific settings are submitted <connect to previous if chain thing>\n    if(backtest.indicator==='RSI' && (pairSettings.buyStrategyValue<1 || pairSettings.buyStrategyValue>99)){\n      alert(\"RSI values must be between 1-99\");\n    }\n\n    console.log(paperAPICall, pairSettings);\n  }\n\n  let customDOM = null;\n  switch(backtest.indicator){\n    case 'RSI':\n      customDOM = (<div>you mother </div>);\n    case 'EMA':\n      customDOM = (<div>fucker</div>);\n    case 'SMA':\n      customDOM = (<div>whore</div>);\n    default:\n      customDOM = (<div>ass</div>);\n    \n  }\n\n  return (\n    <div className='row mx-4 my-2'>\n      <div className='card w-25'>\n        {/* Beginning of Settings */}\n        {backtest.indicator} Settings\n\n        {/* series type */}\n        <label>\n          Select Series Type:\n          <select onChange={(e) => setSeriesType(e.target.value)}>\n            <option value=\"open\">open</option>\n            <option value=\"close\">close</option>\n            <option value=\"high\">high</option>\n            <option value=\"low\">low</option>\n          </select>\n        </label>\n\n        {/* Time Period(# candles in rsi calc) */}\n        <label>\n          Time Period:\n          <input type='number' placeholder='14' onChange={(e) => setTimePeriod(e.target.value)} />\n        </label>\n\n        <br/>\n\n        <label>Paper Bot Settings</label>\n        {/* Max number bags */}\n        <label>\n          Max number of bags:\n          <input type='number' placeholder='5' onChange={(e) => setMaxBags(e.target.value)} />\n        </label>\n\n        {/* Inital balance */}\n        <label>\n        Inital balance (USD):\n          <input type='number' min='0' placeholder='10000' onChange={(e) => setInitialBalance(e.target.value)} />\n        </label>\n\n        {/* Inital buy (type/amount) */}\n        <label>\n        Inital buy type:\n          <select onChange={(e) => setInitalBuyType(e.target.value)}>\n              <option value=\"usd\">($) USD</option>\n              <option value=\"percent\">(%) Percent of Balance</option>\n              <option value=\"numStocks\">(#) Number of Stocks</option>\n            </select>\n        </label>\n        <label>\n        Inital buy amount:\n          <input type='number' placeholder='1500' onChange={(e) => setInitalBuyAmount(e.target.value)} />\n        </label>\n\n        {/* Buy Strategy */}\n        <label>\n          Buy at RSI {\"<\"}\n          <input type='number' placeholder='30' onChange={(e) => setBuyStrategyValue(e.target.value)} />\n        </label>\n\n        {/* Sell Strategy */}\n        <label>\n          Sell at \n          <input type='number' placeholder='1' onChange={(e) => setSellStrategyValue(e.target.value)} />\n          % profit.\n        </label>\n\n        {/* submit button */}\n        <button onClick={() => onSubmit()} className=\"btn-secondary w-25\">Calculate</button>\n\n\n        {/* close button */}\n        <button onClick={() => deleteBacktest(backtest.id)} className=\"btn-primary w-25\">x</button>\n      </div>\n      {/* end of settings, beginning of results */}\n\n      <div className='card w-75'>results baby</div>\n      \n      {/* End of results */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}