{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Backtest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nexport const Backtest = ({\n  backtest\n}) => {\n  _s();\n\n  const {\n    deleteBacktest\n  } = useContext(GlobalContext);\n  /*\n    ema: function, symbol, interval,time period, series type,\n    Sma: function, symbol, interval,time period, series type,\n    rsi: function, symbol, interval,time period, series type\n     //do below later\n    bba: function, symbol, interval,time period, series type, (optionals: dev up, dev down, move avg type)\n    MACD:function, symbol, interval, series type, (optional: fastperiod, slow period, signalperiod)\n    OBv: function, symbol, interval\n    STOCH: function, symbol, interval, (optionals: fast K period, slow K period, slow D period, slow K ma type, slow D ma type)\n     pair settings:\n    max bags : int\n    inital balance: int\n    inital bag cost: int or percent\n    strategy: selected already... customize the indicator... depending which one, ask user for buy value(-x%)....rebuy delay:int....\n    Sell strategy: GAIN... sell profit %\n     optional future: trailing buy/sell... stop loss.... DCA system... average bag values(for sell strategy)\n    */\n\n  switch (backtest.indicator) {\n    case 'RSI':\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-3\",\n          children: [backtest.indicator, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteBacktest(backtest.id),\n            className: \"btn-primary\",\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: console.log('sbumttited'),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Pick your favorite flavor:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                value: \"dogs\",\n                onChange: console.log(\"handlehcaange\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"grapefruit\",\n                  children: \"Grapefruit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"lime\",\n                  children: \"Lime\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"coconut\",\n                  children: \"Coconut\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"mango\",\n                  children: \"Mango\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n\n    case 'EMA':\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [backtest.indicator, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteBacktest(backtest.id),\n          className: \"btn-primary\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n\n    case 'SMA':\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [backtest.indicator, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteBacktest(backtest.id),\n          className: \"btn-primary\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"default item\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteBacktest(backtest.id),\n          className: \"btn-primary\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this);\n  }\n};\n\n_s(Backtest, \"oPHr7xrncWbQhbS30w7Ae3iAyXs=\");\n\n_c = Backtest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Backtest\");","map":{"version":3,"sources":["/Users/benjaminshiao/Desktop/react/trade-analyzer/src/components/Backtest.js"],"names":["React","useContext","GlobalContext","Backtest","backtest","deleteBacktest","indicator","id","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAqBJ,UAAU,CAACC,aAAD,CAArC;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASE,UAAOE,QAAQ,CAACE,SAAhB;AACE,SAAK,KAAL;AACE,0BACE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,qBAECF,QAAQ,CAACE,SAFV,eAIA;AAAQ,YAAA,OAAO,EAAE,MAAMD,cAAc,CAACD,QAAQ,CAACG,EAAV,CAArC;AAAoD,YAAA,SAAS,EAAC,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA;AAAM,YAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAhB;AAAA,oCACE;AAAA,oEAEE;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAqB,gBAAA,QAAQ,EAAED,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA/B;AAAA,wCACE;AAAQ,kBAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAQ,kBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAQ,kBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAQ,kBAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;;AAsBF,SAAK,KAAL;AACE,0BACE;AAAA,mBAEGL,QAAQ,CAACE,SAFZ,eAGE;AACI,UAAA,OAAO,EAAE,MAAMD,cAAc,CAACD,QAAQ,CAACG,EAAV,CADjC;AACgD,UAAA,SAAS,EAAC,aAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;;AAUF,SAAK,KAAL;AACE,0BACE;AAAA,mBAEGH,QAAQ,CAACE,SAFZ,eAGE;AACI,UAAA,OAAO,EAAE,MAAMD,cAAc,CAACD,QAAQ,CAACG,EAAV,CADjC;AACgD,UAAA,SAAS,EAAC,aAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;;AAUF;AACE,0BACE;AAAA,gDAEE;AACI,UAAA,OAAO,EAAE,MAAMF,cAAc,CAACD,QAAQ,CAACG,EAAV,CADjC;AACgD,UAAA,SAAS,EAAC,aAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA/CJ;AAyDD,CArFM;;GAAMJ,Q;;KAAAA,Q","sourcesContent":["import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Backtest = ({ backtest }) => {\n  const { deleteBacktest } = useContext(GlobalContext);\n\n  /*\n    ema: function, symbol, interval,time period, series type,\n    Sma: function, symbol, interval,time period, series type,\n    rsi: function, symbol, interval,time period, series type\n\n    //do below later\n    bba: function, symbol, interval,time period, series type, (optionals: dev up, dev down, move avg type)\n    MACD:function, symbol, interval, series type, (optional: fastperiod, slow period, signalperiod)\n    OBv: function, symbol, interval\n    STOCH: function, symbol, interval, (optionals: fast K period, slow K period, slow D period, slow K ma type, slow D ma type)\n\n    pair settings:\n    max bags : int\n    inital balance: int\n    inital bag cost: int or percent\n    strategy: selected already... customize the indicator... depending which one, ask user for buy value(-x%)....rebuy delay:int....\n    Sell strategy: GAIN... sell profit %\n\n    optional future: trailing buy/sell... stop loss.... DCA system... average bag values(for sell strategy)\n\n\n  */\n\n\n\n  switch(backtest.indicator){\n    case 'RSI':\n      return (\n        <li>\n          <div className='card col-3'>\n          {/* like a div here, has buttons/ parameters... case statement to catch the indicator type and determine return type */}\n          {backtest.indicator}\n\n          <button onClick={() => deleteBacktest(backtest.id)} className=\"btn-primary\">x</button>\n          <form onSubmit={console.log('sbumttited')}>\n            <label>\n              Pick your favorite flavor:\n              <select value='dogs' onChange={console.log(\"handlehcaange\")}>\n                <option value=\"grapefruit\">Grapefruit</option>\n                <option value=\"lime\">Lime</option>\n                <option value=\"coconut\">Coconut</option>\n                <option value=\"mango\">Mango</option>\n              </select>\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n          </div>\n        </li>\n      )\n    case 'EMA':\n      return (\n        <li>\n          {/* like a div here, has buttons/ parameters... case statement to catch the indicator type and determine return type */}\n          {backtest.indicator}\n          <button \n              onClick={() => deleteBacktest(backtest.id)} className=\"btn-primary\">x\n              \n          </button>\n        </li>\n      )\n    case 'SMA':\n      return (\n        <li>\n          {/* like a div here, has buttons/ parameters... case statement to catch the indicator type and determine return type */}\n          {backtest.indicator} \n          <button \n              onClick={() => deleteBacktest(backtest.id)} className=\"btn-primary\">x\n              \n          </button>\n        </li>\n      )\n    default:\n      return (\n        <li>\n          default item\n          <button \n              onClick={() => deleteBacktest(backtest.id)} className=\"btn-primary\">x\n          </button>\n        </li>\n      )\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module"}